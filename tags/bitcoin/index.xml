<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bitcoin on Yet another tech blog</title><link>https://trebaud.github.io/tags/bitcoin/</link><description>Recent content in bitcoin on Yet another tech blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 06 Jan 2018 00:00:00 -0500</lastBuildDate><atom:link href="https://trebaud.github.io/tags/bitcoin/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing a Merkle tree in Python</title><link>https://trebaud.github.io/posts/merkle-tree/</link><pubDate>Sat, 06 Jan 2018 00:00:00 -0500</pubDate><guid>https://trebaud.github.io/posts/merkle-tree/</guid><description>Unless you&amp;rsquo;ve been living under a rock for the past few years you have probably heard of Bitcoin, the decentralized, peer-to-peer, public, trustless, cash system protocol. Regardless of whether or not you think bitcoin&amp;rsquo;s current valuation is in a bubble or worse that it&amp;rsquo;s a Ponzi scheme, it&amp;rsquo;s undeniable that the protocol solves a real and old problem in distributed computing, a.k.a the Byzantine&amp;rsquo;s General Problem. One of the underlying data structures ensuring the immutability of the blockchain is the Merkle tree.</description></item></channel></rss>