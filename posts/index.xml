<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Yet Another Random Memoir</title><link>https://trebaud.github.io/posts/</link><description>Recent content in Posts on Yet Another Random Memoir</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Jul 2022 22:24:52 -0400</lastBuildDate><atom:link href="https://trebaud.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>On proof of work</title><link>https://trebaud.github.io/posts/bitcoin-mining/</link><pubDate>Mon, 11 Jul 2022 22:24:52 -0400</pubDate><guid>https://trebaud.github.io/posts/bitcoin-mining/</guid><description>
When I first heard about Bitcoin, proof of work (PoW) sounded like the coolest and most mysterious concept tied to the protocol. Mainstream media articles trying to describe the PoW process always fell short of a proper explanation though. They usually read something like: &amp;ldquo;miners race to solve complex mathematical problems in order to validate the next block of transactions and earn bitcoins as a reward&amp;rdquo;, which sounded cool and all but only added to the mystery and the confusion.</description></item><item><title>Neovim terminal fun</title><link>https://trebaud.github.io/posts/neovim-term/</link><pubDate>Sun, 26 May 2019 00:00:00 -0500</pubDate><guid>https://trebaud.github.io/posts/neovim-term/</guid><description>
Configure your neovim terminal for maximum efficiency</description></item><item><title>My dev setup</title><link>https://trebaud.github.io/posts/dev-config/</link><pubDate>Thu, 07 Feb 2019 00:00:00 -0500</pubDate><guid>https://trebaud.github.io/posts/dev-config/</guid><description>
In this post I list all the programs and configurations I use for my development workflow. I favor a terminal centric approach in the tools I use as I consider it to be the most efficient way to work.
Tools # Code editor: Neovim with vim-plug Shell: fish with oh-my-fish and spacefish Terminal emulator: kitty tig Optional # Command line finder: fzf Command line color scheme: Gogh Vim browser extension: Vimium Alternatives # Tmux Github-desktop Vscode i3 zsh with oh-my-zsh and spaceship theme Configuration # Here you can find the different configuration files I use for the various tools listed above.</description></item><item><title>Implementing a Merkle tree in Python</title><link>https://trebaud.github.io/posts/merkle-tree/</link><pubDate>Sat, 06 Jan 2018 00:00:00 -0500</pubDate><guid>https://trebaud.github.io/posts/merkle-tree/</guid><description>
Build a Merkle tree in Python</description></item><item><title>Typing Python with typing</title><link>https://trebaud.github.io/posts/typing-python/</link><pubDate>Wed, 27 Dec 2017 00:00:00 -0500</pubDate><guid>https://trebaud.github.io/posts/typing-python/</guid><description>
Learn how to add types to your Python code</description></item></channel></rss>